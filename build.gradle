plugins {
  id 'maven-publish'
}

/* Project Information */
def projectGroup = 'com.unideb.qsa'
def projectVersion = project.getProperties().get('release.version') ?: 'RELEASE.VERSION.UNKNOWN'
/* Secrets */
// Note: Use your username and token
def githubToken = System.getenv('GITHUB_TOKEN') ?: 'YOUR_TOKEN'
def githubUsername = System.getenv('GITHUB_USERNAME') ?: 'YOUR_USERNAME'
print('Release version [' + projectVersion + ']')

apply plugin: 'maven-publish'
apply plugin: 'checkstyle'
apply plugin: 'java'
apply plugin: 'java-library'

dependencies {
  implementation libs.gson
  implementation libs.slf4j.api
  testImplementation libs.mockito.core
  testImplementation libs.testng
}


checkstyle {
  toolVersion = libs.versions.checkstyle.get()
  configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
  configDirectory = file("${rootDir}/config/checkstyle/")
  showViolations = true
  ignoreFailures = false
}

publishing {
  repositories {
    maven {
      name = 'GitHubPackages'
      url = uri('https://maven.pkg.github.com/queueing-systems-assistance/qsa')
      credentials {
        username = githubUsername
        password = githubToken
      }
    }
  }
  publications {
    gpr(MavenPublication) {
      from(components.java)
    }
  }
}

sourceCompatibility = '17'
group = projectGroup
version = projectVersion

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

test {
  useTestNG()
  scanForTestClasses = false
  testLogging {
    afterSuite { desc, result ->
      if (!desc.parent) {
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
}