name: CI/CD

env:
  PROJECT_MAJOR_VERSION: 1
  PROJECT_MINOR_VERSION: 1

on:
  push:
    branches:
      - master
      - feature/QSA-*

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Setup
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Versioning
        id: versioning
        run: |
          echo "Branch name: ${GITHUB_REF_NAME}"
          echo "Build number: ${GITHUB_RUN_NUMBER}"
          echo "Project Major version: ${{env.PROJECT_MAJOR_VERSION}}"
          BRANCH_NAME=${GITHUB_HEAD_REF}
          echo "Branch updated name: ${{BRANCH_NAME}}"
          if [[ "${BRANCH_NAME}" != "master" ]]; then
            BRANCH_NAME=$(echo "${BRANCH_NAME}" | sed s#/#-#g | sed s/[.]/_/g | sed s#-#_#g | awk '{print $1""}') || exit
          fi
          RELEASE_VERSION=${{env.PROJECT_MAJOR_VERSION}}.${{env.PROJECT_MINOR_VERSION}}.${GITHUB_RUN_NUMBER}
          if [[ "${BRANCH_NAME}" != "master" ]]; then
            RELEASE_VERSION="${RELEASE_VERSION}_${BRANCH_NAME}"
          fi
          echo "BRANCH_NAME" "${BRANCH_NAME}"
          echo "RELEASE_VERSION" "${RELEASE_VERSION}"
          echo "export BRANCH_NAME=${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
          echo "export RELEASE_VERSION=${RELEASE_VERSION}" >> "$GITHUB_OUTPUT"
          chmod +x gradlew
      - name: Checkstyle validation
        run: ./gradlew checkstyleMain checkstyleTest -Prelease.version="${{steps.versioning.outputs.RELEASE_VERSION}}" --no-daemon
      - name: Build
        run: ./gradlew -x test -x checkstyleMain -x checkstyleTest build -Prelease.version="${{steps.versioning.outputs.RELEASE_VERSION}}" --no-daemon
      - name: Running Tests
        run: ./gradlew test -Prelease.version="${{steps.versioning.outputs.RELEASE_VERSION}}" --no-daemon
      #- name: Publish package to GitHub Packages
      #  run: ./gradlew publish -Prelease.version="${{steps.versioning.outputs.RELEASE_VERSION}}" --no-daemon
      #- name: Git Tagging
      #  run: |
      #    git config --global user.email "builds@github-ci.com"
      #    git config --global user.name "GitHub CI"
      #    git tag -a -f "${{steps.versioning.outputs.RELEASE_VERSION}}" -m "${{steps.versioning.outputs.RELEASE_VERSION}}"
      #    git push -f "https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" refs/tags/"${{steps.versioning.outputs.RELEASE_VERSION}}"
      #- name: Jira Notify