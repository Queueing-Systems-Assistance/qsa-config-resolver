name: CI/CD

env:
  PROJECT_MAJOR_VERSION: 1
  PROJECT_MINOR_VERSION: 1

on:
  push:
    branches:
      - master
      - feature/QSA-*

jobs:
  versioning:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Versioning
        id: versioning
        shell: bash
        run: |
          if [[ "${BRANCH_NAME}" != "master" ]]; then
            BRANCH_NAME=$(echo "$GITHUB_REF_NAME" | sed s#/#-#g | sed s/[.]/_/g | sed s#-#_#g | awk '{print $1""}')
          fi
          RELEASE_VERSION=${{env.PROJECT_MAJOR_VERSION}}.${{env.PROJECT_MINOR_VERSION}}.${GITHUB_RUN_NUMBER}
          if [[ "${BRANCH_NAME}" != "master" ]]; then
            RELEASE_VERSION="${RELEASE_VERSION}_${BRANCH_NAME}"
          fi
          echo "BRANCH_NAME:" "${BRANCH_NAME}"
          echo "RELEASE_VERSION:" "${RELEASE_VERSION}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          chmod +x gradlew
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ versioning ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Build
        run: ./gradlew -x checkstyleMain -x checkstyleTest build -Prelease.version="${{ steps.versioning.outputs.RELEASE_VERSION }}" --no-daemon
      - name: Save Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: qsa-config-resolver
          path: ./build/
          retention-days: 7
  static-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ versioning ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Checkstyle validation
        run: |
          echo "Version: ${{ steps.versioning.outputs.RELEASE_VERSION }}"
          ./gradlew checkstyleMain checkstyleTest -Prelease.version="${{steps.versioning.outputs.RELEASE_VERSION}}" --no-daemon
  release:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ versioning, static-analysis ]
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v3
        with:
          name: qsa-config-resolver
      - name: Release Artifact
        run: ./gradlew publish -Prelease.version="${{steps.versioning.outputs.RELEASE_VERSION}}" --no-daemon
      #- name: Git Tagging
      #  run: |
      #    git config --global user.email "builds@github-ci.com"
      #    git config --global user.name "GitHub CI"
      #    git tag -a -f "${{steps.versioning.outputs.RELEASE_VERSION}}" -m "${{steps.versioning.outputs.RELEASE_VERSION}}"
      #    git push -f "https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}" refs/tags/"${{steps.versioning.outputs.RELEASE_VERSION}}"
      #- name: Jira Notify